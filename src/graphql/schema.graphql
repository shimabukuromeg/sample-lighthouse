#import Object/*.graphql

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Comment {
    id: ID!
    reply: String!
    post: Post! @belongsTo
}

input CreateUserInput {
    name: String!
    email: String! @rules(apply: ["email"])
    password: String!
    posts: CreatePostsHasMany
}

input CreatePostsHasMany {
    create: [CreatePostInput!]!
}

input CreateUserBelongsTo {
    connect: ID
    create: CreateUserInput
}

input CreatePostInput {
    title: String!
    content: String!
    author: CreateUserBelongsTo
}

input UpdatePostInput {
    id: ID!
    title: String
    author: UpdateUserBelongsTo
}

input UpdateUserInput {
    id: ID!
    name: String
    email: String
    password: String
}

input UpdateUserBelongsTo {
    connect: ID
    create: CreateUserInput
    disconnect: Boolean
    delete: Boolean
    update: UpdateUserInput
}

type Mutation {
    createUser(input: CreateUserInput! @spread): User! @create
    updateUser(id: ID! name: String): User @update
    createPost(input: CreatePostInput! @spread): Post @create
    updatePost(input: UpdatePostInput! @spread): Post @update
}

type Query {
    users: [User!]! @guard @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    me: User! @auth
    posts: [Post!]! @paginate @guard(with: ["user"])
    post(id: Int! @eq): Post @find
}
